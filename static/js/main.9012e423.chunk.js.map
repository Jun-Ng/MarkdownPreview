{"version":3,"sources":["Markdown.js","index.js"],"names":["marked","require","placeholder","setOptions","breaks","Markdown","props","state","MarkdownInput","handleChange","bind","event","this","setState","target","value","preventDefault","id","onChange","dangerouslySetInnerHTML","__html","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2OAEMA,EAASC,EAAQ,IAEjBC,EAAW,qnCA6CjBF,EAAOG,WAAW,CACdC,QAAQ,I,IA6BGC,E,kDAzBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,cAAeN,GAEnB,EAAKO,aAAe,EAAKA,aAAaC,KAAlB,gBALN,E,gDAQlB,SAAaC,GACTC,KAAKC,SAAS,CACVL,cAAeG,EAAMG,OAAOC,QAEhCJ,EAAMK,mB,oBAGV,WACI,OACI,sBAAKC,GAAG,QAAR,UACI,0BAAUA,GAAG,SAASF,MAAOH,KAAKL,MAAMC,cAAeU,SAAUN,KAAKH,aAAcP,YAAaA,IACjG,qBAAKe,GAAG,UAAUE,wBAAyB,CAAEC,OAAQpB,EAAOY,KAAKL,MAAMC,yB,GApBhEa,IAAMC,WChDvBC,E,kDACF,WAAYjB,GAAO,uCACTA,G,0CAIV,WACI,OACI,sBAAKW,GAAG,QAAR,UACI,oBAAIA,GAAG,QAAP,gCACA,cAAC,EAAD,W,GAVEI,IAAMC,WAgBxBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9012e423.chunk.js","sourcesContent":["import React from 'react'\n\nconst marked = require(\"marked\");\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://i.ibb.co/LPX3CwQ/BORKBORK.jpg)\n`;\n\nmarked.setOptions({\n    breaks: true\n})\n\nclass Markdown extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            MarkdownInput: placeholder,\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event){\n        this.setState({\n            MarkdownInput: event.target.value\n        })\n        event.preventDefault()\n    }\n\n    render(){\n        return(\n            <div id=\"root2\">\n                <textarea id=\"editor\" value={this.state.MarkdownInput} onChange={this.handleChange} placeholder={placeholder}></textarea>\n                <div id=\"preview\" dangerouslySetInnerHTML={{ __html: marked(this.state.MarkdownInput)}}></div>\n            </div>\n        )\n    }\n}\n\nexport default Markdown","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Markdown from './Markdown'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n    }\n\n\n    render(){\n        return(\n            <div id=\"root1\">\n                <h1 id=\"title\">Markdown Previewer</h1>\n                <Markdown />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}